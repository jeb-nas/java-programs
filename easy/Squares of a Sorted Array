/*class Solution {
    public int[] sortedSquares(int[] nums) {
        int i=0;
        int j=nums.length-1;
        for(int n=0;n<nums.length;n++){
            nums[n]=nums[n]*nums[n];
        
        }
        while(j>=0){
            if(Math.abs(nums[i])>Math.abs(nums[j])){
                int cmp=nums[i];
                for(int k=0;k<j;k++){
                    nums[k]=nums[k+1];
                }
                nums[j]=cmp;
            }
            j--;
        }
        return nums;
        
    }
}*/
class Solution {
    public int[] sortedSquares(int[] nums) {
        int[] res = new int[nums.length];
        int left = 0;
        int right = nums.length - 1;

        for (int i = nums.length - 1; i >= 0; i--) {
            if (Math.abs(nums[left]) > Math.abs(nums[right])) {
                res[i] = nums[left] * nums[left];
                left++;
            } else {
                res[i] = nums[right] * nums[right];
                right--;
            }
        }
        return res;        
    }
}
